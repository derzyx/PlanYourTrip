// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanYourTrip_BackEnd.Data;

#nullable disable

namespace PlanYourTrip_BackEnd.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PlanYourTrip_ClassLibrary.Classes.Subscription", b =>
                {
                    b.Property<int>("IdSubscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubscription"), 1L, 1);

                    b.Property<int>("ObservedId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.HasKey("IdSubscription");

                    b.HasIndex("ObservedId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("PlanYourTrip_ClassLibrary.Classes.TripPlans", b =>
                {
                    b.Property<int>("TripPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripPlanId"), 1L, 1);

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OstatniaAktualizacja")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Publiczny")
                        .HasColumnType("bit");

                    b.Property<string>("PunktyJSON")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripPlanId");

                    b.HasIndex("AutorId");

                    b.ToTable("TripPlans");
                });

            modelBuilder.Entity("PlanYourTrip_ClassLibrary.Classes.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<int?>("IdAvatar")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(2);

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PlanYourTrip_ClassLibrary.Classes.Subscription", b =>
                {
                    b.HasOne("PlanYourTrip_ClassLibrary.Classes.Users", "Observed")
                        .WithMany()
                        .HasForeignKey("ObservedId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PlanYourTrip_ClassLibrary.Classes.Users", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Observed");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("PlanYourTrip_ClassLibrary.Classes.TripPlans", b =>
                {
                    b.HasOne("PlanYourTrip_ClassLibrary.Classes.Users", "Users")
                        .WithMany("TripPlans")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PlanYourTrip_ClassLibrary.Classes.Users", b =>
                {
                    b.Navigation("TripPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
